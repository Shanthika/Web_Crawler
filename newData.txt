 simple representation of a stack runtime with push and pop operations in computer science a stack is an abstract data type that serves as a collection of elements with two principal operations push which adds an element to the collection and pop which removes the most recently added element that was not yet removed the order in which elements come off a stack gives rise to its alternative name lifo last in first out additionally a peek operation may give access to the top without modifying the stack 1 the name stack for this type of structure comes from the analogy to a set of physical items stacked on top of each other which makes it easy to take an item off the top of the stack while getting to an item deeper in the stack may require taking off multiple other items first 2 considered as a linear data structure or more abstractly a sequential collection the push and pop operations occur only at one end of the structure referred to as the top of the stack this makes it possible to implement a stack as a singly linked list and a pointer to the top element a stack may be implemented to have a bounded capacity if the stack is full and does not contain enough space to accept an entity to be pushed the stack is then considered to be in an overflow state the pop operation removes an item from the top of the stack history edit stacks entered the computer science literature in 1946 when alan m turing used the terms bury and unbury as a means of calling and returning from subroutines 3 subroutines had already been implemented in konrad zuse s z4 in 1945 klaus samelson and friedrich l bauer of technical university munich proposed the idea in 1955 and filed a patent in 1957 4 and in march 1988 bauer received the computer pioneer award for the invention of the stack principle 5 the same concept was developed independently by the australian charles leonard hamblin in the first half of 1954 6 stacks are often described by analogy to a springloaded stack of plates in a cafeteria 7 2 8 clean plates are placed on top of the stack pushing down any already there when a plate is removed from the stack the one below it pops up to become the new top nonessential operations edit in many implementations a stack has more operations than push and pop an example is top of stack or peek which observes the topmost element without removing it from the stack 9 since this can be done with a pop and a push with the same data it is not essential an underflow condition can occur in the stack top operation if the stack is empty the same as pop also implementations often have a function which just returns whether the stack is empty software stacks edit implementation edit a stack can be easily implemented either through an array or a linked list what identifies the data structure as a stack in either case is not the implementation but the interface the user is only allowed to pop or push items onto the array or linked list with few other helper operations the following will demonstrate both implementations using pseudocode an array can be used to implement a bounded stack as follows the first element usually at the zero offset is the bottom resulting in array 0 being the first element pushed onto the stack and the last element popped off the program must keep track of the size length of the stack using a variable top that records the number of items pushed so far therefore pointing to the place in the array where the next element is to be inserted assuming a zerobased index convention thus the stack itself can be effectively implemented as a threeelement structure structure stack maxsize integer top integer items array of item procedure initialize stk stack size integer stkitems new array of size items initially empty stkmaxsize size stktop 0 the push operation adds an element and increments the top index after checking for overflow procedure push stk stack x item if stktop stkmaxsize report overflow error else stkitems stktop x stktop stktop 1 similarly pop decrements the top index after checking for underflow and returns the item that was previously the top one procedure pop stk stack if stktop 0 report underflow error else stktop stktop 1 r stkitems stktop return r using a dynamic array it is possible to implement a stack that can grow or shrink as much as needed the size of the stack is simply the size of the dynamic array which is a very efficient implementation of a stack since adding items to or removing items from the end of a dynamic array requires amortized o 1 time linked list edit another option for implementing stacks is to use a singly linked list a stack is then a pointer to the head of the list with perhaps a counter to keep track of the size of the list structure frame data item next frame or nil structure stack head frame or nil size integer procedure initialize stk stack stkhead nil stksize 0 pushing and popping items happens at the head of the list overflow is not possible in this implementation unless memory is exhausted procedure push stk stack x item newhead new frame newheaddata x newheadnext stkhead stkhead newhead stksize stksize 1 procedure pop stk stack if stkhead nil report underflow error r stkheaddata stkhead stkheadnext stksize stksize 1 return r stacks and programming languages edit some languages such as perl lisp javascript and python make the stack operations push and pop available on their standard listarray types some languages notably those in the forth family including postscript are designed around languagedefined stacks that are directly visible to and manipulated by the programmer the following is an example of manipulating a stack in common lisp is the lisp interpreter s prompt lines not starting with are the interpreter s responses to expressions setf stack list a b c set the variable stack a b c pop stack get top leftmost element should modify the stack a stack check the value of stack b c push new stack push a new top onto the stack new b c several of the c standard library container types have pushback and popback operations with lifo semantics additionally the stack template class adapts existing containers to provide a restricted api with only pushpop operations php has an splstack class java s library contains a stack class that is a specialization of vector following is an example program in java language using that class import javautil class stackdemo public static void main string args stack string stack new stack string stackpush a insert a in the stack stackpush b insert b in the stack stackpush c insert c in the stack stackpush d insert d in the stack systemoutprintln stackpeek prints the top of the stack d stackpop removing the top d stackpop removing the next top c hardware stack edit a common use of stacks at the architecture level is as a means of allocating and accessing memory basic architecture of a stack edit a typical stack storing local data and call information for nested procedure calls not necessarily nested procedures this stack grows downward from its origin the stack pointer points to the current topmost datum on the stack a push operation decrements the pointer and copies the data to the stack a pop operation copies data from the stack and then increments the pointer each procedure called in th to do queue implemented as an array circular and fixedsized stacks and queues edit a stack is a basic data structure that can be logically thought of as a linear structure represented by a real physical stack or pile a structure where insertion and deletion of items takes place at one end called top of the stack the basic concept can be illustrated by thinking of your data set as a stack of plates or books where you can only take the top item off the stack in order to remove things from it this structure is used all throughout programming the basic implementation of a stack is also called a lifo last in first out to demonstrate the way it accesses data since as we will see there are various variations of stack implementations there are basically three operations that can be performed on stacks they are 1 inserting an item into a stack push 2 deleting an item from the stack pop 3 displaying the contents of the stack pip note depending on the language and implementation the data structure may share the name with an abstract data type that support all of the data structure characteristics below are some of operations a stack data type normally supports stack itemtype operations push newitem itemtype adds an item onto the stack top itemtype returns the last item pushed onto the stack pop removes the mostrecentlypushed item from the stack isempty boolean true if no more items can be popped and there is no top item isfull boolean true if no more items can be pushed getsize integer returns the number of elements on the stack all operations except getsize can be performed in o 1 displaystyle o 1 time getsize runs in at worst o n displaystyle o n linked list implementation edit the basic linked list implementation is one of the easiest stack implementations you can do structurally it is a linked list type stack itemtype data list singly linked list itemtype stack follows the lifo last in first out operation queue follows the fifo first in first out operation constructor list new singlylinkedlist end constructor most operations are implemented by passing them through to the underlying linked list when you want to push something onto the list you simply add it to the front of the linked list the previous top is then next from the item being added and the list s front pointer points to the new item method push newitem itemtype listprepend newitem end method to look at the top item you just examine the first item in the linked list method top itemtype return listgetbegin getvalue end method when you want to pop something off the list simply remove the first item from the linked list method pop listremovefirst end method a check for emptiness is easy just check if the list is empty method isempty boolean return listisempty end method a check for full is simple linked lists are considered to be limitless in size method isfull boolean return false end method a check for the size is again passed through to the list method getsize integer return listgetsize end method end type a real stack implementation in a published library would probably reimplement the linked list in order to squeeze the last bit of performance out of the implementation by leaving out unneeded functionality the above implementation gives you the ideas involved and any optimization you need can be accomplished by inlining the linked list code performance analysis edit in a linked list accessing the first element is an o 1 displaystyle o 1 operationthe list contains a pointer that checks for emptyfullness as done here are also o 1 displaystyle o 1 depending on what timespace tradeoff is made most of the time users of a stack do not use the getsize operation and so a bit of space can be saved by not optimizing it since all operations are at the top of the stack the array implementation is now much much better public class stackarray implements stack protected int top protected object data the array implementation keeps the bottom of the stack at the beginning of the array it grows toward the end of the array the only problem is if you attempt to push an element when the array is full if so assertpre isfull stack is not full will fail raising an exception thus it makes more sense to implement with vector see stackvector to allow unbounded growth at cost of occasional o n delays complexity all operations are o 1 with exception of occasional push and clear which should replace all entries by null in order to let them be garbagecollected array implementation does not replace null entries the vector implementation does applications of stacks edit using stacks we can solve many applications some of which are listed below converting a decimal number into a binary number edit the logic for transforming a decimal number into a binary number is as follows read a number iteration while number is greater than zero 1 find out the remainder after dividing the number by 2 2 print the remainder 3 divide the number by 2 end the iteration however there is a problem with this logic suppose the number whose binary form we want to find is 23 using this logic we get the result as 11101 instead of getting 10111 to solve this problem we use a stack we make use of the lifo property of the stack initially we push the binary digit formed into the stack instead of printing it directly after the entire digit has been converted into the binary form we pop one digit at a time from the stack and print it therefore we get the decimal number is converted into its proper binary form algorithm 1 create a stack 2 enter a decimal number which has to be converted into its equivalent binary form 3 iteration1 while number 0 31 digit number 2 32 push digit into the stack 33 if the stack is full 331 print an error 332 stop the algorithm 34 end the if condition 35 divide the number by 2 4 end iteration1 5 iteration2 while stack is not empty 51 pop digit from the stack 52 print the digit 6 end iteration2 7 stop towers of hanoi edit one of the most interesting applications of stacks can be found in solving a puzzle called tower of hanoi according to an old brahmin story the existence of the universe is calculated in terms of the time taken by a number of monks who are working all the time to move 64 disks from one pole to another but there are some rules about how this should be done which are you can move only one disk at a time for temporary storage a third pole may be used you can not place a disk of larger diameter on a disk of smaller diameter 1 here we assume that a is first tower b is second tower c is third tower output when there are 3 disks let 1 be the smallest disk 2 be the disk of medium size and 3 be the largest disk move disk from peg to peg 1 a c 2 a b 1 c b 3 a c 1 b a 2 b c 1 a c output when there are 4 disks move disk from peg to peg 1 a b 2 a c 1 b c 3 a b 1 c a 2 c b 1 a b 4 a c 1 b c 2 b a 1 c a 3 b c 1 a b 2 a c 1 b c the c code for this solution can be implemented in two ways first implementation without using stacks edit here we assume that a is first tower b is second tower c is third tower b is the intermediate void towersofhanoi int n int a int b int c move top n disks from tower a to tower b use tower c for intermediate storage definition of stack in english stack noun1a pile of objects typically one that is neatly arrangedmore example sentences she opened her mouth to say something but valora adora bustled back into the room with a small stack of neatly folded colorful clothing groaning and pushing myself up i shuffled over to my bathroom almost tripping on a stack of books piled near my bathroom door it was then that her hand slid across what sounded like a stack of neatly clumped paper these should be your size she handed him a stack of neatly folded clothes sheriff vasey was sat at his desk lines of worry incised into his face as he tried to ignore the storm and concentrate on the stack of paperwork piled up in front of him most amazing of all there was a stack of gifts piled on the chair in the corner emanuelle frowned as she traced her fingers down the stack of folders neatly piled inside at other times her mother lay in bed for days not bothering to get dressed reading from a stack of books piled on her bedside table do you have a stack of books piled beside your bed that you really are going to read come in she called absently slaving over a stack of papers neatly arranged on her desk her bed had a whole stack of clothing piled up and it was getting higher i climbed up a stack of old crates arranged haphazardly behind the warehouse she greeted her brother as he finally walked over to the car a stack of books piled up to his chin vincent moved silently into a deep shadow on the other side of the room going behind a stack of crates piled in the middle of the floor neither the pile of work related emails in my inbox nor the stack of paperwork on my desk can put a dent in my enthusiasm the man heaved as he piled the stack of six books onto roy s already dusty lap i got out my small stack of exams from my summer class and looking up once in a while to watch the people pass by i graded question 1 he grabbed a nearby stack of bandages and piled on one after the other until he felt there was enough to soak up the blood a stack of kindling was piled on the floor nearby and he tossed some in quickly lighting a fire deia s stepmom emerged underneath the staircase with a stack of neatly folded clothes and shot vaius a look of dislike and poisonous curiosity synonymsheap pile mound mountain pyramid mass store stockpile hoard load tower drift clamp hackview synonyms11a stack ofstacks ofinformal a large quantity of something there s stacks of work for me now more example sentences yet a growing stack of academic research this year suggests that playing doom or halflife can sharpen your physical reactions and improve your social life before it a desk with stacks of waiting paperwork held vigil its dark wood surface holding old ink stains stalin closed the show for the three nights and sang four of his classics from his stack of hits the next type of beggars were some people walking around with stacks of cds in their hands on the walk of fame i still have plenty to do and a stack of emails that are waiting for replies but they will have to wait until later in the week there are stacks of people who have emailed me or commented over the last year or so who i would love to meet in the flesh kearsley and horwich piled up a stack of runs in an entertaining draw there will be some people who have stacks of confidence and some who have none plus loggers get to eat stacks of pancakes every day it seems that absence does make the heart grow fonder for on our return what do we find but stacks of great emails from you the first track opens with what might be a guitar solo filtered through massive stacks of electronics as insectlike squeals pour out of the speakers synonymsa great deal a lot a great amount a large amount a large quantity quantities plenty abundance superabundance plethora cornucopia a wealth profusion a mountain reamsview synonyms12 a rectangular or cylindrical pile of hay or straw or of grain in sheafexample sentences we used to build stacks mainly in the stackyard by the farm buildings but occasionally we built some in the field from another hole came the straw that was again piled into a stack i finished with the dirty hay and began piling clean hay from a stack on the far wall leaving the wheelbarrow for another time our only pickup truck was used to operate the overshot stacker that piled the hay into stacks synonymshaystack rick hayrick stook mow haymow barleymowview synonyms13 a vertical arrangement of hifi or guitar amplification equipmentexample sentences a new venue meant yet another soundcheck to make sure that the reassembled stacks of amplifiers and speakers had been matched to the concert hall s acoustics topend cpus do note readily make for a slimline quietrunning unit to sit within a hifi stack the drums were coming through this huge amplifier stack and it was louder than onstage the hearing of both ozzy osbourne and the who guitarist peter townshend was damaged by prolonged exposure to the high wattage blare from stacks of amplifiers 14 a number of aircraft flying in circles at different altitudes around the same point while waiting for permission to land at an airportexample sentences we lost our situational awareness of the other aircraft in the overhead stack being in the dominant position on top of the stack in the start circle is a strong tactical advantage beatenup airplanes will always be at the bottom of the stack the 10 aircraft made an impressive sight as they hovered in a stack above hmas albatross they thought the stacks of green aircraft belonged to army fliers 15 a pyramidal group of riflesexample sentences i recall msgt widner a high school rotc instructor demonstrating that this arrangement when properly done on a grass parade field was strong enough that a soldier could stand one legged on the stack this wo nt be as sturdy as a stack made by three m1s or three 03s coronach if you get 9 more rifles you could set up a table in your living room where each leg is a rifle stack 16the stacks units of shelving in part of a library normally closed to the public used to store books compactly the demand for items from the stacks as modifier the new premises provided a reading room and a stack room more example sentences people will want to live in a coffee shop talking to people about books not in the stacks at the library or the warehouse at amazon i used to go to ucsd s central library and browse the stacks especially the economics section sneak the book back into the stacks and tell them they screwed up because you returned it long ago or else hold onto it until the next amnesty period some of them were friendly and even allowed the use of dollies to transport the books from the stacks to the checkout desk they re the smell of yellowed book pages in the stacks of an abandoned library the librarian sped away along the stacks of books for today much perhaps most of a student s search for information has moved out of the stacks and into dorm rooms and studies via the internet neither outside nor inside the library did i see any sign of where one might deposit one s weapon before browsing in the stacks or settling into the periodicals room books will be fetched by library staff from the stacks downstairs where the collection will be housed in suitable conditions of security temperature and humidity nearly every day i m at the library searching the stacks perhaps it took that long to declare the book lost from the stacks of the geneva public library district this is the version that will go into print and be found in the stacks at the library 17computing a set of storage locations which store data in such a way that the most recently stored item is the first to be retriev